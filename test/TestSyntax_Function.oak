
namespace TestNS
{
	
	struct MyStruct <A>
	{
		
		a: A
		
	}
	
	implement MyStruct:<A> where <A>
	{
		
		#[ keep_if ( target_os_macosx ) ]
		function my_func ( A: & Self ): void
		{
		}
		
	}
	
}

public function Test ( count: i32 ): i32
{
	
	bind a: TestNS::MyStruct:<i32>;
	
	TestNS::MyStruct:<i32>::my_func ();
	
	bind b: TestNS::MyStruct: <i32>;
	
	bind mut i:i32 = count;
	
	loop
	`my_loop:
	{
		bind current: i32 = i;
		
		if ( i == 0 )
			break `my_loop;
			
		i --;
		
	}
	
	return i;
	
}

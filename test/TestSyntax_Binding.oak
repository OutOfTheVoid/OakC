bind A: u32 = 0;
bind public B: f64 = 0.0f;
bind mut C: bool = false;
bind public mut D: char = 'A';
bind mut X: some_ns::Y;

namespace NS
{
	
	namespace OT
	{
		
		implement S
		{
			
			
			
		}
		
	}
	
	bind A: u32 = 0;
	bind public B: f64 = 0.0 + 1.0f64;
	bind mut C: bool = false;
	bind public mut D: char = 'A';
	
	function Func () : void
	{
		
		bind A: u32 = 0;
		bind mut B: bool = false;
		
		{
			
			bind C: i8 = 0i8;
			bind D: some_ns::X;
			
		}
		
	}
	
	struct T
	{
		
		bind o:bool
		
	}
	
	struct S
	{
		
		bind A: u32,
		bind B: f64
		
	}
	
	/*implement S
	{
		
		function M ( & self )
		{
			
			bind A: u32 = 0;
			bind mut B: bool = false;
			
		}
		
	}*/
	
}

implement T
{
	
	
	
}
